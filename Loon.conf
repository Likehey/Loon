[General]
# IPv6 支持
ipv6 = false
# > 跳过某个域名或者IP段
skip-proxy = 127.0.0.1,192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,100.64.0.0/10,localhost,*.local,passenger.t3go.cn,passenger.t3go.cn
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32
# DNS 服务器
dns-server = system,119.29.29.29,114.114.114.114,223.5.5.5
# 腾讯DoH和阿里云DoH
doh-server = https://1.12.12.12/dns-query, https://223.5.5.5/dns-query
# Wi-Fi 访问
# > 允许 Wi-Fi 网络下其它设备访问
allow-wifi-access = false
wifi-access-http-port = 7222
wifi-access-socket5-port = 7221
# > 代理测速 URL
proxy-test-url = http://cp.cloudflare.com/generate_204
# > 测速超时 (s)
test-timeout = 2
interface-mode = auto
switch-node-after-failure-times = 3
# > 解决一些ip请求无法匹配域名类规则的问题。real-ip指定的域名将不返回fake ip响应，直接将dns请求发往目标dns服务器
real-ip = msftconnecttest.com, msftncsi.com, *.msftconnecttest.com, *.msftncsi.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, *.battlenet.com.cn, *.battlenet.com, *.blzstatic.cn, *.battle.net
# 数据库
geoip-url = https://github.com/Masaiki/GeoIP2-CN/raw/release/Country.mmdb
# 解析器
resource-parser = https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/backend/dist/sub-store-parser.loon.min.js

[Host]
#可以使用以下四种模式：
# 1 指定域名使用对应的IP地址
# 2 将域名指向另一个域名
# 3 指定域名请求DNS时使用特定的DNS服务器，格式为：google.com = server:8.8.8.8 或者 *.baidu.com = server:https://example.com/dns-query
# 4 指定具体的SSID环境下使用特定的DNS服务器，格式为：ssid:PHICOMM_5G = server:10.0.0.1

[Proxy]

[Remote Proxy]
# 远程节点订阅
# 机场名(可改为你喜欢的名字) = 订阅URL

[Remote Filter]
# 筛选订阅节点，筛选后的结果可加入到策略组中，目前支持三种筛选方式
# NodeSelect: 使用在UI上选择的节点。
# NameKeyword: 根据提供的关键词对订阅中所有节点的名称进行筛选，使用筛选后的节点。
# NameRegex: 根据提供的正则表达式对订阅中所有节点的名称进行筛选，使用筛选后的节点。
全球节点 = NameRegex, FilterKey = "^(?=.*(.*))(?!.*((?i)久虚|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|群|GAME|TG)).*$"
香港节点 = NameRegex, FilterKey = "(?i)(港|HK|Hong)"
台湾节点 = NameRegex, FilterKey = "(?i)(台|TW|Tai)"
日本节点 = NameRegex, FilterKey = "(?i)(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan)"
韩国节点 = NameRegex, FilterKey = "(?i)(KR|Korea|KOR|首尔|韩|韓)"
美国节点 = NameRegex, FilterKey = "(?i)(美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States)"
新加坡节点 = NameRegex, FilterKey = "(?i)(新加坡|坡|狮城|SG|Singapore)"

[Proxy Group]
## 策略组
## 将分流规则传递过来的网络请求进行分发
# SSID地区场景策略
全球场景 = ssid,default=全球策略,cellular=全球策略,"PHICOMM_5G"=DIRECT,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/Global.png
香港场景 = ssid,default=香港策略,cellular=香港策略,"PHICOMM_5G"=DIRECT,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/HK.png
台湾场景 = ssid,default=台湾策略,cellular=台湾策略,"PHICOMM_5G"=DIRECT,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/TW.png
日本场景 = ssid,default=日本策略,cellular=日本策略,"PHICOMM_5G"=DIRECT,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/JP.png
韩国场景 = ssid,default=韩国策略,cellular=韩国策略,"PHICOMM_5G"=DIRECT,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/KR.png
美国场景 = ssid,default=美国策略,cellular=美国策略,"PHICOMM_5G"=DIRECT,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/US.png
新加坡场景 = ssid,default=新加坡策略,cellular=新加坡策略,"PHICOMM_5G"=DIRECT,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/SG.png
# 手动选择地区策略
全球策略 = select,全球延时优选,全球故障转移,全球负载均衡,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/Global.png
香港策略 = select,香港延时优选,香港故障转移,香港负载均衡,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/HK.png
台湾策略 = select,台湾延时优选,台湾故障转移,台湾负载均衡,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/TW.png
日本策略 = select,日本延时优选,日本故障转移,日本负载均衡,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/JP.png
韩国策略 = select,韩国延时优选,韩国故障转移,韩国负载均衡,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/KR.png
美国策略 = select,美国延时优选,美国故障转移,美国负载均衡,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/US.png
新加坡策略 = select,新加坡延时优选,新加坡故障转移,新加坡负载均衡,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/SG.png
# 自动策略组
# 延时优选策略组
全球延时优选 = url-test,全球节点,url = http://cp.cloudflare.com/generate_204,interval = 60,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/Global.png
香港延时优选 = url-test,香港节点,url = http://www.gstatic.com/generate_204,interval = 60,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/HK.png
台湾延时优选 = url-test,台湾节点,url = http://www.gstatic.com/generate_204,interval = 60,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/TW.png
日本延时优选 = url-test,日本节点,url = http://www.gstatic.com/generate_204,interval = 60,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/JP.png
韩国延时优选 = url-test,韩国节点,url = http://www.gstatic.com/generate_204,interval = 60,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/KR.png
美国延时优选 = url-test,美国节点,url = http://www.gstatic.com/generate_204,interval = 60,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/US.png
新加坡延时优选 = url-test,新加坡节点,url = http://www.gstatic.com/generate_204,interval = 60,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/SG.png
# 故障转移策略组
全球故障转移 = fallback,全球节点,url = http://www.gstatic.com/generate_204,interval = 60,max-timeout = 3000,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/Global.png
香港故障转移 = fallback,香港节点,url = http://www.gstatic.com/generate_204,interval = 60,max-timeout = 3000,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/HK.png
台湾故障转移 = fallback,台湾节点,url = http://www.gstatic.com/generate_204,interval = 60,max-timeout = 3000,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/TW.png
日本故障转移 = fallback,日本节点,url = http://www.gstatic.com/generate_204,interval = 60,max-timeout = 3000,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/JP.png
韩国故障转移 = fallback,韩国节点,url = http://www.gstatic.com/generate_204,interval = 60,max-timeout = 3000,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/KR.png
美国故障转移 = fallback,美国节点,url = http://www.gstatic.com/generate_204,interval = 60,max-timeout = 3000,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/US.png
新加坡故障转移 = fallback,新加坡节点,url = http://www.gstatic.com/generate_204,interval = 60,max-timeout = 3000,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/SG.png
# 负载均衡策略组
全球负载均衡 = load-balance,全球节点,url = http://www.gstatic.com/generate_204,interval = 60,max-timeout = 3000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/Global.png
香港负载均衡 = load-balance,香港节点,url = http://www.gstatic.com/generate_204,interval = 60,max-timeout = 3000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/HK.png
台湾负载均衡 = load-balance,台湾节点,url = http://www.gstatic.com/generate_204,interval = 60,max-timeout = 3000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/TW.png
日本负载均衡 = load-balance,日本节点,url = http://www.gstatic.com/generate_204,interval = 60,max-timeout = 3000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/JP.png
韩国负载均衡 = load-balance,韩国节点,url = http://www.gstatic.com/generate_204,interval = 60,max-timeout = 3000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/KR.png
美国负载均衡 = load-balance,美国节点,url = http://www.gstatic.com/generate_204,interval = 60,max-timeout = 3000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/US.png
新加坡负载均衡 = load-balance,新加坡节点,url = http://www.gstatic.com/generate_204,interval = 60,max-timeout = 3000,algorithm = pcc,img-url = https://raw.githubusercontent.com/Likehey/icon/main/Anime/SG.png
[Remote Rule]
## 远程分流规则订阅
## 将网络请求进行分流，网络请求的走向(是否能成功访问)由匹配到的策略组决定
# Speedtest规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Speedtest/Speedtest.list, policy=DIRECT, tag=Speedtest, enabled=true
# Spotify规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Spotify/Spotify.list, policy=DIRECT, tag=Spotify, enabled=true
# GlobalMedia规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/GlobalMedia/GlobalMedia.list, policy=全球场景, tag=GlobalMedia, enabled=true
# Microsoft规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Microsoft/Microsoft.list, policy=DIRECT, tag=Microsoft, enabled=true
# Google规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Google/Google.list, policy=美国场景, tag=Google, enabled=true
# Apple规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Apple/Apple.list, policy=DIRECT, tag=Apple, enabled=true
# Global规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Global/Global.list, policy=全球场景, tag=Global, enabled=true
# BiliBili规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/BiliBili/BiliBili.list, policy=DIRECT, tag=BiliBili, enabled=true
# Advertising规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Advertising/Advertising.list, policy=REJECT, tag=Advertising, enabled=true
# Mainland规则
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/China/China.list, policy=DIRECT, tag=Mainland, enabled=true

[Rule]
# 本地分流规则:相同规则下本地规则优先生效
# 绕过企业证书过期
DOMAIN,ocsp.apple.com,REJECT
# 其它
DOMAIN-SUFFIX,local,DIRECT
# 抖音本地分流
DOMAIN-SUFFIX,snssdk.com,DIRECT
DOMAIN-SUFFIX,amemv.com,DIRECT
GEOIP,CN,DIRECT
FINAL,全球场景

[Remote Rewrite]
# 远程重写

[URL Rewrite]
# 本地重写

[Remote Script]

[Script]
# 任务脚本
generic script-path=https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Script/generic_example.js, timeout=300, tag=GeoLocation, img-url=https://raw.githubusercontent.com/Likehey/icon/main/Anime/UN.png
generic script-path=https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/check.js, timeout=300, tag=流媒体-解锁查询, img-url=https://raw.githubusercontent.com/Likehey/icon/main/Anime/YouTube.png

[Plugin]
# 远程(重写)插件
https://raw.githubusercontent.com/chengkongyiban/Loon/main/Loon-Gallery/Rewrite_to_Loon.plugin, enabled=true

https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/Auto_Join_TF.plugin, enabled=false

https://raw.githubusercontent.com/NobyDa/Script/master/Loon/Loon_TF_Download.plugin, enabled=true

https://raw.githubusercontent.com/app2smile/rules/master/plugin/spotify.plugin, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png, enabled=true

https://raw.githubusercontent.com/Coldvvater/Mononoke/master/Loon/Plugin/Adblock/YouTubeAds.plugin, enabled=true

https://raw.githubusercontent.com/Coldvvater/Mononoke/master/Loon/Plugin/Tool/Q-Search.plugin, enabled=true

https://raw.githubusercontent.com/Likehey/Loon/main/Loon-Gallery.plugin, enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/Advertising/Advertising.plugin, policy=REJECT, tag=Advertising, enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/Redirect/Redirect.plugin, tag=Redirect, enabled=true

[MITM]
hostname = 
enable = true
skip-server-cert-verify = true
